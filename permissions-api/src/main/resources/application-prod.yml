permission:
  config:
    msgcenter:
      umeng:
        androidAppKey:
        androidAppMasterSecret:
        iosAppKey:
        iosAppMasterSecret:
    netty:
      port: 9090
    decrypt:
      decrypt-secret-key: permission

elasticsearch:
  hostname: $[xdKWgSsmi/E57j5kwrGbqpz43f2FgFJs]
  port: $[ko/Ui477T6KNXS3NbX0E/A==]

spring:
  redis:
    ################### redis 单机版 start ##########################
    host: $[yuXsmYYO4eOx5s7MAtjDxYlukTCLsziQ]
    port: $[LmeMcOhAVwMn1cVMuS/9Gw==]
    password: $[qj5rq3JUYj/op2ZxJ3rrMQ==]
    timeout: 6000
    database: 0
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
        max-active: 10
        # 连接池中的最大空闲连接 ，默认值也是8
        max-idle: 8
        # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
        max-wait: 100
        # 连接池中的最小空闲连接 ，默认值也是0
        min-idle: 2
      shutdown-timeout: 100ms
  # sharding-jdbc 数据源配置
  shardingsphere:
    datasource:
      names: permissions0, leaf0, edi0, workflow0
      permissions0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: $[7CZZNr33D5OvPaxevnL58nJjf9NU8cvU10X9pf2OWxJba1hyeXcV1hgpBUYuqLIkzdsR9foEJYNWHi6NvUt5bPTg6AHf4KTN/gp/aHjluxdq2rGnuVjhk/KbrLj0AI5/XfYIuW0LzF24J0Twd8RBPl7zkVq315isdh4tQREEJLERjQuBvFEJemt/PcLW8+KtDlEXTc03L1lnFmlfQFcn0yYD12asDJgLQT3m6ryjHSK15dqbXHUIwryzIwlMl1/Db5ztTqMQwNxWWDUSidHhAA==]
        username: root
        password: root
      leaf0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: $[YMiCsbpVTo8X9j1E4I8ffHR2v+gmFRzuO+TQiyMGglVHXuZW6bgeir+hD9Dgc2cBhYfRWk0xZ/sa9Ao0b2Jj2n8ovOxRZlw/Sgs/QWIVjursUVZRc9J3rs6mLBH79ypnGnp0M763ZiBSs69Dn1bgIQMnsRtqZe3F22W1aEq45nqFmZrvlBiyUWazfAilkpXwa/uNfSbVgWbrWWACfVCPJnIfeuQQl/X0/onJYfolgZi/Ie2dKg8wlRF9rbw1uknVPsr9BfGSnVU=]
        username: $[0GSSWy/ks335Nz0wCUeNLQ==]
        password: $[nkr/47m3PUDFGX8ou2MB7Q==]
      edi0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: $[vIeRi916FAgRkajjk9Hkt4R7EpOjyiQplW/GB9RN2xJ3SJeXUiRkJ4dDNk+x4ZPrBnuk9lIPSYnt9Izcz9LQQt2MWdGAC3OYd6mDPjUq+aQbKkSt+JApElosRHvB+iHKrSG+zejGkHJN69l1DaaS2ZAl/UHRALs0xg0TPnKJ+UScZSUf2eX7yxZuV6dvSVQw6dkqf/9haHWlSzgDoC0yTwRUKI5OvjjksEy2e7AJ0l89o66/w7izXzEwdv4h57FL]
        username: $[0GSSWy/ks335Nz0wCUeNLQ==]
        password: $[nkr/47m3PUDFGX8ou2MB7Q==]
      workflow0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: $[IFbLGjEuKSM9NUsnYSrjbU7dm9/81a77i+4Legvgt8wpsq72ydBu5YUCWl0Si4yFvIikVtuA+nE1ZrbHvxHfTFCMUaYVFqYMIg1fOjdB1DdTNvc7uA/UPk0rGGywNI9hRliANYnAGMQURLIwXHwerZFmbWC8Hvdw6vB1BplGL1Y/MxR6WccZh+AuwsTax15MOm5PoUUTDCMkc3ZhHbfyNNRcKHjSfYzVOoV7bb8u0+dO7/0w12zWHcbQOkV6TPJO6X0mHghDoEs=]
        username: $[0GSSWy/ks335Nz0wCUeNLQ==]
        password: $[nkr/47m3PUDFGX8ou2MB7Q==]
    props:
      sql:
        show: true
    sharding:
      default-data-source-name: permissions0
      default-database-strategy:
        none:
          any:
      default-table-strategy:
        none:
          any:
      tables:
        # EDI
        edi_cfg_biz_retry:
          actual-data-nodes: edi0.edi_cfg_biz_retry
        edi_biz_retry_record:
          actual-data-nodes: edi0.edi_biz_retry_record_$->{2022..2023}$->{['01','02','03','04','05','06','07','08','09','10','11','12']}_$->{0..3}
          table-strategy:
            standard:
              sharding-column: sharding_key
              precise-algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.BizRetryShardingAlgorithm
        retry_biz_record_task:
          actual-data-nodes: edi0.edi_biz_retry_record_$->{2022..2023}$->{['01','02','03','04','05','06','07','08','09','10','11','12']}_$->{0..3}
          database-strategy:
            hint:
              algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.BizRetryTaskShardingHintAlgorithm
          table-strategy:
            hint:
              algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.BizRetryTaskShardingHintAlgorithm
        # TECH-EDI
        edi_cfg_tech_biz_retry:
          actual-data-nodes: edi0.edi_cfg_tech_biz_retry
        edi_tech_biz_retry_record:
          actual-data-nodes: edi0.edi_tech_biz_retry_record_$->{2022..2023}$->{['01','02','03','04','05','06','07','08','09','10','11','12']}_$->{0..3}
          key-generator:
            type: SNOWFLAKE
            column: id
            props:
              worker.id: 0
              max.tolerate.time.difference.milliseconds: 0
              max.vibration.offset: 1000
          table-strategy:
            standard:
              sharding-column: sharding_key
              precise-algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.TechBizRetryShardingAlgorithm
        retry_tech_biz_record_task:
          actual-data-nodes: edi0.edi_tech_biz_retry_record_$->{2022..2023}$->{['01','02','03','04','05','06','07','08','09','10','11','12']}_$->{0..3}
          database-strategy:
            hint:
              algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.BizRetryTaskShardingHintAlgorithm
          table-strategy:
            hint:
              algorithm-class-name: com.ah.cloud.permissions.edi.infrastructure.shard.algorithm.BizRetryTaskShardingHintAlgorithm
        leaf:
          actual-data-nodes: leaf0.leaf_alloc
        thread_pool_data:
          actual-data-nodes: permissions0.thread_pool_data_$->{2021..2022}$->{['01','02','03','04','05','06','07','08','09','10','11','12']}
          table-strategy:
            standard:
              sharding-column: sharding_key
              precise-algorithm-class-name: com.ah.cloud.permissions.biz.infrastructure.sharding.ThreadPoolDataShardingAlgorithm
        workflow:
          actual-data-nodes: workflow0.ACT_*, workflow0.FLW_*, workflow0.workflow_*
flowable:
  # 如果是手动创建的flowable表，此参数必须要设置为false, 否则启动报错
  database-schema-update: false
  # 关闭异步任务
  async-executor-activate: false

security:
  api:
    permit-all:
      - /login/usernamePasswordLogin
      - /login/validateCodeLogin
      - /validateCode/sendCode
      - /validateCode/sendSmsCode
      - /validateCode/sendEmailCode
      - /es/**

mq:
  redis:
    topic:
      quartzJobChange:
        name: quartz-job-change-channel
      operateChatRoom:
        name: operate-chat-room
      chatRoomNodeListener:
        name: chat-room-node
      chatRoomNodeListenerPattern:
        name: chat-room-node:*
      groupChatListenerNode:
        name: group-chat-Node
      groupChatListenerNodePattern:
        name: group-chat-Node:*

system:
  upload:
    path: /upload
  local:
    file:
      uri: http://localhost:8080/showImage/
  mode: visitor

jasypt:
  encryptor:
    password: permission

edi:
  retry:
    runTime: 3000 # 快慢线程池切换 单个任务执行超过3000ms定义为慢任务
    hourOverTimes: 10 # 快慢线程池切换 1min内慢任务超过10个类型会被分配到慢线程池执行
    dataSource: edi0 # 数据源配置
    retryRecordActualTableSuffix: 0,1,2,3 # EDI记录表后缀
    retryTechRecordActualTableSuffix: 0,1,2,3 # TECH EDI记录表后缀
    retryRecordActualTableName: edi_biz_retry_record # EDI记录表前缀
    retryTechRecordActualTableName: edi_tech_biz_retry_record #TECH EDI记录表前缀
    alarm:
      bot: https://open.feishu.cn/open-apis/bot/v2/hook/eb7c1281-a644-4929-aab1-245ae2502d7a #告警机器人配置
      secret: VokIeaTfHwUBiXARWmyhMc
      maxCount: 1 #告警记录阈值
      minute: 30 #告警时间阈值
